/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PricingIndexRouteImport } from './routes/pricing/index'
import { Route as CustomersIndexRouteImport } from './routes/customers/index'
import { Route as BrandIndexRouteImport } from './routes/brand/index'
import { Route as homeIndexRouteImport } from './routes/(home)/index'
import { Route as CustomersCaseStudyRouteImport } from './routes/customers/$caseStudy'

const PricingIndexRoute = PricingIndexRouteImport.update({
  id: '/pricing/',
  path: '/pricing/',
  getParentRoute: () => rootRouteImport,
} as any)
const CustomersIndexRoute = CustomersIndexRouteImport.update({
  id: '/customers/',
  path: '/customers/',
  getParentRoute: () => rootRouteImport,
} as any)
const BrandIndexRoute = BrandIndexRouteImport.update({
  id: '/brand/',
  path: '/brand/',
  getParentRoute: () => rootRouteImport,
} as any)
const homeIndexRoute = homeIndexRouteImport.update({
  id: '/(home)/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const CustomersCaseStudyRoute = CustomersCaseStudyRouteImport.update({
  id: '/customers/$caseStudy',
  path: '/customers/$caseStudy',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/customers/$caseStudy': typeof CustomersCaseStudyRoute
  '/': typeof homeIndexRoute
  '/brand': typeof BrandIndexRoute
  '/customers': typeof CustomersIndexRoute
  '/pricing': typeof PricingIndexRoute
}
export interface FileRoutesByTo {
  '/customers/$caseStudy': typeof CustomersCaseStudyRoute
  '/': typeof homeIndexRoute
  '/brand': typeof BrandIndexRoute
  '/customers': typeof CustomersIndexRoute
  '/pricing': typeof PricingIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/customers/$caseStudy': typeof CustomersCaseStudyRoute
  '/(home)/': typeof homeIndexRoute
  '/brand/': typeof BrandIndexRoute
  '/customers/': typeof CustomersIndexRoute
  '/pricing/': typeof PricingIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/customers/$caseStudy'
    | '/'
    | '/brand'
    | '/customers'
    | '/pricing'
  fileRoutesByTo: FileRoutesByTo
  to: '/customers/$caseStudy' | '/' | '/brand' | '/customers' | '/pricing'
  id:
    | '__root__'
    | '/customers/$caseStudy'
    | '/(home)/'
    | '/brand/'
    | '/customers/'
    | '/pricing/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  CustomersCaseStudyRoute: typeof CustomersCaseStudyRoute
  homeIndexRoute: typeof homeIndexRoute
  BrandIndexRoute: typeof BrandIndexRoute
  CustomersIndexRoute: typeof CustomersIndexRoute
  PricingIndexRoute: typeof PricingIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/pricing/': {
      id: '/pricing/'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof PricingIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/customers/': {
      id: '/customers/'
      path: '/customers'
      fullPath: '/customers'
      preLoaderRoute: typeof CustomersIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/brand/': {
      id: '/brand/'
      path: '/brand'
      fullPath: '/brand'
      preLoaderRoute: typeof BrandIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(home)/': {
      id: '/(home)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof homeIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/customers/$caseStudy': {
      id: '/customers/$caseStudy'
      path: '/customers/$caseStudy'
      fullPath: '/customers/$caseStudy'
      preLoaderRoute: typeof CustomersCaseStudyRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  CustomersCaseStudyRoute: CustomersCaseStudyRoute,
  homeIndexRoute: homeIndexRoute,
  BrandIndexRoute: BrandIndexRoute,
  CustomersIndexRoute: CustomersIndexRoute,
  PricingIndexRoute: PricingIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
